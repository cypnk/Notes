# This may be adjusted for an e-commerce site, with shopping carts etc.., but this is fine for a Blog
set limit { states 500000, frags 2000 }

# A table to store flooding clients
table <flooders> persist counters

# You can also create permanent tables and add IP addresses to them
# E.G. A blocklist called "blocked" in a folder called "pftables"
# table <blocklist> persist file "/etc/pftables/blocked"

# Web traffic serving with maximum connection rate and throttling
websrv="(max 500, source-track rule, max-src-states 50, max-src-conn-rate 500/5, \
	max-src-conn 50, overload <flooders> flush global)"

# If you're also receiving email on the same server, uncomment the following
#mailsrv="(max 500, source-track rule, max-src-states 5, max-src-conn-rate 5/10, \
#	max-src-conn 3, overload <flooders> flush global)"

# Note the slash at the end of the first line indicates the directive wraps
# DO NOT add a space after that slash

# Block policy is to just drop the connection by default
set block-policy drop

# Ignore loopback (localhost)
set skip on lo

# Accommodate slow clients (E.G. when hosting over Tor)
set optimization high-latency
set ruleset-optimization profile
set timeout { frag 30 }

# Set syn cookies
set syncookies adaptive (start 25%, end 12%)

# Safety scrub
match in all scrub (no-df random-id max-mss 1440)
match out all scrub (no-df random-id reassemble tcp max-mss 1440)

# This *mostly* works, but a dedicated blocklist, like Spamhaus, is strongly recommended
antispoof quick for { egress lo0 }
block quick from { <flooders> }

# You can add more comma delimited tables to that list
# E.G. <flooders>, <abuse>, <spamhaus> etc...

# Deny access in both directions by default
block all
block return

# Spoof protection
block in quick from urpf-failed to any
block in quick from no-route to any

# Allow access to web ports (email is similar, but outside the scope of this)
pass in on egress inet proto tcp from any to (egress) port { 80 443 } keep state $websrv

# Uncomment this line if you're also handling email on this server
#pass in on egress inet proto tcp from any to (egress) port { 25 } keep state $mailsrv

# Pass TCP, UDP, ICMP
pass out on egress proto { tcp, udp, icmp } all modulate state

# The pf.conf that comes with OpenBSD has some other settings, which should be left as-is
# Only add/modify what's needed to get your site up and running, but learn more about what these do

